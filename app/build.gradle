plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.ssmmhh.jibam"
        minSdkVersion 17
        targetSdkVersion 31
        versionCode 13
        versionName "1.1.0"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true // for support .svg file api < 21

        testInstrumentationRunner "com.ssmmhh.jibam.MockTestRunner"
        //Android Test Orchestrator options
        testInstrumentationRunnerArguments clearPackageData: 'true'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        //for android test orchestrator
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.test:core-ktx:1.4.0'

    //Android ktx//warning dont update this b/c it need +31 minSdk
    def android_kts_version = "1.6.0"
    implementation "androidx.core:core-ktx:$android_kts_version"
//    implementation "androidx.fragment:fragment-ktx:$android_kts_version"
    def fragment = "1.3.6"
    implementation "androidx.fragment:fragment-ktx:$fragment"
    //LifeCycle
    def lifecycle_version = "2.2.0"
    //lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"



    // -- Coroutines
    def coroutines_version = "1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // -------- INSTRUMENTATION(UI) TESTS (use JUnit4)
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    //androidx testing dependency
    def androidx_arch_test_version = "2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    // Espresso /** this dependencies is being used for ui testing
    def androidx_test_espresso = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidx_test_espresso"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_test_espresso"
    // androidx.test /** this dependencies is being used for ui testing
    def androidx_test = "1.1.3"
    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:core:$androidx_test"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test"
    //Android test orchestrator
    androidTestUtil "androidx.test:orchestrator:1.1.0"

    //mockk.io
    androidTestImplementation "io.mockk:mockk-android:1.10.2"

    //test coroutines stuff and test with coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    //Dagger2
    def dagger_version = "2.28.3"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // -------- LOCAL UNIT TESTS (use JUnit5)
    // JUnit Jupiter
    def junit_jupiter_version = "5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    //dagger for test
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    //mockk for unit testing
    testImplementation "io.mockk:mockk:1.10.2"

    //dependency to be able to use coroutine + test coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //viewpager bottomSheet
    implementation "biz.laenger.android:vpbs:0.0.6"

    //card view
    implementation "androidx.cardview:cardview:1.0.0"

    def glide_version = "4.13.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //shamsi date picker
    implementation 'com.alirezaafkar:sundatepicker:2.1.2'
    //MaterialTapTargetPrompt
    //https://github.com/sjwall/MaterialTapTargetPrompt
    implementation 'uk.co.samuelwall:material-tap-target-prompt:3.1.1'

    //Android chart view / graph view library
    //https://github.com/PhilJay/MPAndroidChart#gradle-setup
    implementation 'com.github.PhilJay:MPAndroidChart:3.1.0'

    //App intro library
    //https://github.com/AppIntro/AppIntro
    implementation 'com.github.AppIntro:AppIntro:6.1.0'

    // leakCanary
    def leakCanary_version = '2.7'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary_version"
    //multi dex for leakcanary
    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //firebase boom and firebase analytics, firebas crashlytics
    implementation platform('com.google.firebase:firebase-bom:28.4.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

}